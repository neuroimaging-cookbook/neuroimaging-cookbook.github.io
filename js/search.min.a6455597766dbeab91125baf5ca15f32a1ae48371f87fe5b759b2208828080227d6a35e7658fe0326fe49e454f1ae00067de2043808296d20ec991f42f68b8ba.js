var e,t;e=this,t=function(){"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}function t(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function r(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,t){return(u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e,t){return!t||"object"!=typeof t&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function f(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=s(e);if(t){var i=s(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return h(this,n)}}function l(e){return function(e){if(Array.isArray(e))return d(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return d(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?d(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function v(e){return Array.isArray?Array.isArray(e):"[object Array]"===x(e)}function g(e){return"string"==typeof e}function y(e){return"number"==typeof e}function p(e){return!0===e||!1===e||function(e){return m(e)&&null!==e}(e)&&"[object Boolean]"==x(e)}function m(t){return"object"===e(t)}function k(e){return null!=e}function M(e){return!e.trim().length}function x(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":Object.prototype.toString.call(e)}var b=function(e){return"Invalid value for key ".concat(e)},L=function(e){return"Pattern length exceeds max of ".concat(e,".")},S=Object.prototype.hasOwnProperty,_=function(){function e(n){var r=this;t(this,e),this._keys=[],this._keyMap={};var i=0;n.forEach((function(e){var t=w(e);i+=t.weight,r._keys.push(t),r._keyMap[t.id]=t,i+=t.weight})),this._keys.forEach((function(e){e.weight/=i}))}return r(e,[{key:"get",value:function(e){return this._keyMap[e]}},{key:"keys",value:function(){return this._keys}},{key:"toJSON",value:function(){return JSON.stringify(this._keys)}}]),e}();function w(e){var t=null,n=null,r=null,i=1;if(g(e)||v(e))r=e,t=O(e),n=j(e);else{if(!S.call(e,"name"))throw new Error(function(e){return"Missing ".concat(e," property in key")}("name"));var o=e.name;if(r=o,S.call(e,"weight")&&(i=e.weight)<=0)throw new Error(function(e){return"Property 'weight' in key '".concat(e,"' must be a positive integer")}(o));t=O(o),n=j(o)}return{path:t,id:n,weight:i,src:r}}function O(e){return v(e)?e:e.split(".")}function j(e){return v(e)?e.join("."):e}var A=c({},{isCaseSensitive:!1,includeScore:!1,keys:[],shouldSort:!0,sortFn:function(e,t){return e.score===t.score?e.idx<t.idx?-1:1:e.score<t.score?-1:1}},{},{includeMatches:!1,findAllMatches:!1,minMatchCharLength:1},{},{location:0,threshold:.6,distance:100},{},{useExtendedSearch:!1,getFn:function(e,t){var n=[],r=!1;return function e(t,i,o){if(k(t))if(i[o]){var c=t[i[o]];if(!k(c))return;if(o===i.length-1&&(g(c)||y(c)||p(c)))n.push(function(e){return null==e?"":function(e){if("string"==typeof e)return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}(e)}(c));else if(v(c)){r=!0;for(var a=0,s=c.length;a<s;a+=1)e(c[a],i,o+1)}else i.length&&e(c,i,o+1)}else n.push(t)}(e,g(t)?t.split("."):t,0),r?n:n[0]},ignoreLocation:!1,ignoreFieldNorm:!1}),I=/[^ ]+/g;function C(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:3,t=new Map;return{get:function(n){var r=n.match(I).length;if(t.has(r))return t.get(r);var i=parseFloat((1/Math.sqrt(r)).toFixed(e));return t.set(r,i),i},clear:function(){t.clear()}}}var E=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=n.getFn,i=void 0===r?A.getFn:r;t(this,e),this.norm=C(3),this.getFn=i,this.isCreated=!1,this.setIndexRecords()}return r(e,[{key:"setSources",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this.docs=e}},{key:"setIndexRecords",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this.records=e}},{key:"setKeys",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this.keys=t,this._keysMap={},t.forEach((function(t,n){e._keysMap[t.id]=n}))}},{key:"create",value:function(){var e=this;!this.isCreated&&this.docs.length&&(this.isCreated=!0,g(this.docs[0])?this.docs.forEach((function(t,n){e._addString(t,n)})):this.docs.forEach((function(t,n){e._addObject(t,n)})),this.norm.clear())}},{key:"add",value:function(e){var t=this.size();g(e)?this._addString(e,t):this._addObject(e,t)}},{key:"removeAt",value:function(e){this.records.splice(e,1);for(var t=e,n=this.size();t<n;t+=1)this.records[t].i-=1}},{key:"getValueForItemAtKeyId",value:function(e,t){return e[this._keysMap[t]]}},{key:"size",value:function(){return this.records.length}},{key:"_addString",value:function(e,t){if(k(e)&&!M(e)){var n={v:e,i:t,n:this.norm.get(e)};this.records.push(n)}}},{key:"_addObject",value:function(e,t){var n=this,r={i:t,$:{}};this.keys.forEach((function(t,i){var o=n.getFn(e,t.path);if(k(o))if(v(o))!function(){for(var e=[],t=[{nestedArrIndex:-1,value:o}];t.length;){var c=t.pop(),a=c.nestedArrIndex,s=c.value;if(k(s))if(g(s)&&!M(s)){var u={v:s,i:a,n:n.norm.get(s)};e.push(u)}else v(s)&&s.forEach((function(e,n){t.push({nestedArrIndex:n,value:e})}))}r.$[i]=e}();else if(!M(o)){var c={v:o,n:n.norm.get(o)};r.$[i]=c}})),this.records.push(r)}},{key:"toJSON",value:function(){return{keys:this.keys,records:this.records}}}]),e}();function $(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=n.getFn,i=void 0===r?A.getFn:r,o=new E({getFn:i});return o.setKeys(e.map(w)),o.setSources(t),o.create(),o}function R(e,t){var n=e.matches;t.matches=[],k(n)&&n.forEach((function(e){if(k(e.indices)&&e.indices.length){var n={indices:e.indices,value:e.value};e.key&&(n.key=e.key.src),e.idx>-1&&(n.refIndex=e.idx),t.matches.push(n)}}))}function F(e,t){t.score=e.score}function P(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.errors,r=void 0===n?0:n,i=t.currentLocation,o=void 0===i?0:i,c=t.expectedLocation,a=void 0===c?0:c,s=t.distance,u=void 0===s?A.distance:s,h=t.ignoreLocation,f=void 0===h?A.ignoreLocation:h,l=r/e.length;if(f)return l;var d=Math.abs(a-o);return u?l+d/u:d?1:l}function N(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:A.minMatchCharLength,n=[],r=-1,i=-1,o=0,c=e.length;o<c;o+=1){var a=e[o];a&&-1===r?r=o:a||-1===r||((i=o-1)-r+1>=t&&n.push([r,i]),r=-1)}return e[o-1]&&o-r>=t&&n.push([r,o-1]),n}function D(e){for(var t={},n=0,r=e.length;n<r;n+=1){var i=e.charAt(n);t[i]=(t[i]||0)|1<<r-n-1}return t}var z=function(){function e(n){var r=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=i.location,c=void 0===o?A.location:o,a=i.threshold,s=void 0===a?A.threshold:a,u=i.distance,h=void 0===u?A.distance:u,f=i.includeMatches,l=void 0===f?A.includeMatches:f,d=i.findAllMatches,v=void 0===d?A.findAllMatches:d,g=i.minMatchCharLength,y=void 0===g?A.minMatchCharLength:g,p=i.isCaseSensitive,m=void 0===p?A.isCaseSensitive:p,k=i.ignoreLocation,M=void 0===k?A.ignoreLocation:k;if(t(this,e),this.options={location:c,threshold:s,distance:h,includeMatches:l,findAllMatches:v,minMatchCharLength:y,isCaseSensitive:m,ignoreLocation:M},this.pattern=m?n:n.toLowerCase(),this.chunks=[],this.pattern.length){var x=function(e,t){r.chunks.push({pattern:e,alphabet:D(e),startIndex:t})},b=this.pattern.length;if(b>32){for(var L=0,S=b%32,_=b-S;L<_;)x(this.pattern.substr(L,32),L),L+=32;if(S){var w=b-32;x(this.pattern.substr(w),w)}}else x(this.pattern,0)}}return r(e,[{key:"searchIn",value:function(e){var t=this.options,n=t.isCaseSensitive,r=t.includeMatches;if(n||(e=e.toLowerCase()),this.pattern===e){var i={isMatch:!0,score:0};return r&&(i.indices=[[0,e.length-1]]),i}var o=this.options,c=o.location,a=o.distance,s=o.threshold,u=o.findAllMatches,h=o.minMatchCharLength,f=o.ignoreLocation,d=[],v=0,g=!1;this.chunks.forEach((function(t){var n=t.pattern,i=t.alphabet,o=t.startIndex,y=function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=r.location,o=void 0===i?A.location:i,c=r.distance,a=void 0===c?A.distance:c,s=r.threshold,u=void 0===s?A.threshold:s,h=r.findAllMatches,f=void 0===h?A.findAllMatches:h,l=r.minMatchCharLength,d=void 0===l?A.minMatchCharLength:l,v=r.includeMatches,g=void 0===v?A.includeMatches:v,y=r.ignoreLocation,p=void 0===y?A.ignoreLocation:y;if(t.length>32)throw new Error(L(32));for(var m,k=t.length,M=e.length,x=Math.max(0,Math.min(o,M)),b=u,S=x,_=d>1||g,w=_?Array(M):[];(m=e.indexOf(t,S))>-1;){var O=P(t,{currentLocation:m,expectedLocation:x,distance:a,ignoreLocation:p});if(b=Math.min(O,b),S=m+k,_)for(var j=0;j<k;)w[m+j]=1,j+=1}S=-1;for(var I=[],C=1,E=k+M,$=1<<k-1,R=0;R<k;R+=1){for(var F=0,D=E;F<D;){var z=P(t,{errors:R,currentLocation:x+D,expectedLocation:x,distance:a,ignoreLocation:p});z<=b?F=D:E=D,D=Math.floor((E-F)/2+F)}E=D;var K=Math.max(1,x-D+1),q=f?M:Math.min(x+D,M)+k,W=Array(q+2);W[q+1]=(1<<R)-1;for(var J=q;J>=K;J-=1){var T=J-1,U=n[e.charAt(T)];if(_&&(w[T]=+!!U),W[J]=(W[J+1]<<1|1)&U,R&&(W[J]|=(I[J+1]|I[J])<<1|1|I[J+1]),W[J]&$&&(C=P(t,{errors:R,currentLocation:T,expectedLocation:x,distance:a,ignoreLocation:p}))<=b){if(b=C,(S=T)<=x)break;K=Math.max(1,2*x-S)}}var V=P(t,{errors:R+1,currentLocation:x,expectedLocation:x,distance:a,ignoreLocation:p});if(V>b)break;I=W}var B={isMatch:S>=0,score:Math.max(.001,C)};if(_){var G=N(w,d);G.length?g&&(B.indices=G):B.isMatch=!1}return B}(e,n,i,{location:c+o,distance:a,threshold:s,findAllMatches:u,minMatchCharLength:h,includeMatches:r,ignoreLocation:f}),p=y.isMatch,m=y.score,k=y.indices;p&&(g=!0),v+=m,p&&k&&(d=[].concat(l(d),l(k)))}));var y={isMatch:g,score:g?v/this.chunks.length:1};return g&&r&&(y.indices=d),y}}]),e}(),K=function(){function e(n){t(this,e),this.pattern=n}return r(e,[{key:"search",value:function(){}}],[{key:"isMultiMatch",value:function(e){return q(e,this.multiRegex)}},{key:"isSingleMatch",value:function(e){return q(e,this.singleRegex)}}]),e}();function q(e,t){var n=e.match(t);return n?n[1]:null}var W=function(e){a(i,e);var n=f(i);function i(e){return t(this,i),n.call(this,e)}return r(i,[{key:"search",value:function(e){var t=e===this.pattern;return{isMatch:t,score:t?0:1,indices:[0,this.pattern.length-1]}}}],[{key:"type",get:function(){return"exact"}},{key:"multiRegex",get:function(){return/^="(.*)"$/}},{key:"singleRegex",get:function(){return/^=(.*)$/}}]),i}(K),J=function(e){a(i,e);var n=f(i);function i(e){return t(this,i),n.call(this,e)}return r(i,[{key:"search",value:function(e){var t=-1===e.indexOf(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,e.length-1]}}}],[{key:"type",get:function(){return"inverse-exact"}},{key:"multiRegex",get:function(){return/^!"(.*)"$/}},{key:"singleRegex",get:function(){return/^!(.*)$/}}]),i}(K),T=function(e){a(i,e);var n=f(i);function i(e){return t(this,i),n.call(this,e)}return r(i,[{key:"search",value:function(e){var t=e.startsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,this.pattern.length-1]}}}],[{key:"type",get:function(){return"prefix-exact"}},{key:"multiRegex",get:function(){return/^\^"(.*)"$/}},{key:"singleRegex",get:function(){return/^\^(.*)$/}}]),i}(K),U=function(e){a(i,e);var n=f(i);function i(e){return t(this,i),n.call(this,e)}return r(i,[{key:"search",value:function(e){var t=!e.startsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,e.length-1]}}}],[{key:"type",get:function(){return"inverse-prefix-exact"}},{key:"multiRegex",get:function(){return/^!\^"(.*)"$/}},{key:"singleRegex",get:function(){return/^!\^(.*)$/}}]),i}(K),V=function(e){a(i,e);var n=f(i);function i(e){return t(this,i),n.call(this,e)}return r(i,[{key:"search",value:function(e){var t=e.endsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[e.length-this.pattern.length,e.length-1]}}}],[{key:"type",get:function(){return"suffix-exact"}},{key:"multiRegex",get:function(){return/^"(.*)"\$$/}},{key:"singleRegex",get:function(){return/^(.*)\$$/}}]),i}(K),B=function(e){a(i,e);var n=f(i);function i(e){return t(this,i),n.call(this,e)}return r(i,[{key:"search",value:function(e){var t=!e.endsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,e.length-1]}}}],[{key:"type",get:function(){return"inverse-suffix-exact"}},{key:"multiRegex",get:function(){return/^!"(.*)"\$$/}},{key:"singleRegex",get:function(){return/^!(.*)\$$/}}]),i}(K),G=function(e){a(i,e);var n=f(i);function i(e){var r,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},c=o.location,a=void 0===c?A.location:c,s=o.threshold,u=void 0===s?A.threshold:s,h=o.distance,f=void 0===h?A.distance:h,l=o.includeMatches,d=void 0===l?A.includeMatches:l,v=o.findAllMatches,g=void 0===v?A.findAllMatches:v,y=o.minMatchCharLength,p=void 0===y?A.minMatchCharLength:y,m=o.isCaseSensitive,k=void 0===m?A.isCaseSensitive:m,M=o.ignoreLocation,x=void 0===M?A.ignoreLocation:M;return t(this,i),(r=n.call(this,e))._bitapSearch=new z(e,{location:a,threshold:u,distance:f,includeMatches:d,findAllMatches:g,minMatchCharLength:p,isCaseSensitive:k,ignoreLocation:x}),r}return r(i,[{key:"search",value:function(e){return this._bitapSearch.searchIn(e)}}],[{key:"type",get:function(){return"fuzzy"}},{key:"multiRegex",get:function(){return/^"(.*)"$/}},{key:"singleRegex",get:function(){return/^(.*)$/}}]),i}(K),H=function(e){a(i,e);var n=f(i);function i(e){return t(this,i),n.call(this,e)}return r(i,[{key:"search",value:function(e){for(var t,n=0,r=[],i=this.pattern.length;(t=e.indexOf(this.pattern,n))>-1;)n=t+i,r.push([t,n-1]);var o=!!r.length;return{isMatch:o,score:o?1:0,indices:r}}}],[{key:"type",get:function(){return"include"}},{key:"multiRegex",get:function(){return/^'"(.*)"$/}},{key:"singleRegex",get:function(){return/^'(.*)$/}}]),i}(K),Q=[W,H,T,U,B,V,J,G],X=Q.length,Y=/ +(?=([^\"]*\"[^\"]*\")*[^\"]*$)/;function Z(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return e.split("|").map((function(e){for(var n=e.trim().split(Y).filter((function(e){return e&&!!e.trim()})),r=[],i=0,o=n.length;i<o;i+=1){for(var c=n[i],a=!1,s=-1;!a&&++s<X;){var u=Q[s],h=u.isMultiMatch(c);h&&(r.push(new u(h,t)),a=!0)}if(!a)for(s=-1;++s<X;){var f=Q[s],l=f.isSingleMatch(c);if(l){r.push(new f(l,t));break}}}return r}))}var ee=new Set([G.type,H.type]),te=function(){function e(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=r.isCaseSensitive,o=void 0===i?A.isCaseSensitive:i,c=r.includeMatches,a=void 0===c?A.includeMatches:c,s=r.minMatchCharLength,u=void 0===s?A.minMatchCharLength:s,h=r.ignoreLocation,f=void 0===h?A.ignoreLocation:h,l=r.findAllMatches,d=void 0===l?A.findAllMatches:l,v=r.location,g=void 0===v?A.location:v,y=r.threshold,p=void 0===y?A.threshold:y,m=r.distance,k=void 0===m?A.distance:m;t(this,e),this.query=null,this.options={isCaseSensitive:o,includeMatches:a,minMatchCharLength:u,findAllMatches:d,ignoreLocation:f,location:g,threshold:p,distance:k},this.pattern=o?n:n.toLowerCase(),this.query=Z(this.pattern,this.options)}return r(e,[{key:"searchIn",value:function(e){var t=this.query;if(!t)return{isMatch:!1,score:1};var n=this.options,r=n.includeMatches;e=n.isCaseSensitive?e:e.toLowerCase();for(var i=0,o=[],c=0,a=0,s=t.length;a<s;a+=1){var u=t[a];o.length=0,i=0;for(var h=0,f=u.length;h<f;h+=1){var d=u[h],v=d.search(e),g=v.isMatch,y=v.indices,p=v.score;if(!g){c=0,i=0,o.length=0;break}if(i+=1,c+=p,r){var m=d.constructor.type;ee.has(m)?o=[].concat(l(o),l(y)):o.push(y)}}if(i){var k={isMatch:!0,score:c/i};return r&&(k.indices=o),k}}return{isMatch:!1,score:1}}}],[{key:"condition",value:function(e,t){return t.useExtendedSearch}}]),e}(),ne=[];function re(e,t){for(var n=0,r=ne.length;n<r;n+=1){var i=ne[n];if(i.condition(e,t))return new i(e,t)}return new z(e,t)}var ie="$and",oe="$or",ce="$path",ae="$val",se=function(e){return!(!e[ie]&&!e[oe])},ue=function(e){return!!e[ce]},he=function(e){return!v(e)&&m(e)&&!se(e)},fe=function(e){return i({},ie,Object.keys(e).map((function(t){return i({},t,e[t])})))},le=function(){function e(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2?arguments[2]:void 0;t(this,e),this.options=c({},A,{},r),this.options.useExtendedSearch,this._keyStore=new _(this.options.keys),this.setCollection(n,i)}return r(e,[{key:"setCollection",value:function(e,t){if(this._docs=e,t&&!(t instanceof E))throw new Error("Incorrect 'index' type");this._myIndex=t||$(this.options.keys,this._docs,{getFn:this.options.getFn})}},{key:"add",value:function(e){k(e)&&(this._docs.push(e),this._myIndex.add(e))}},{key:"remove",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){return!1},t=[],n=0,r=this._docs.length;n<r;n+=1){var i=this._docs[n];e(i,n)&&(this.removeAt(n),n-=1,r-=1,t.push(i))}return t}},{key:"removeAt",value:function(e){this._docs.splice(e,1),this._myIndex.removeAt(e)}},{key:"getIndex",value:function(){return this._myIndex}},{key:"search",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.limit,r=void 0===n?-1:n,i=this.options,o=i.includeMatches,c=i.includeScore,a=i.shouldSort,s=i.sortFn,u=i.ignoreFieldNorm,h=g(e)?g(this._docs[0])?this._searchStringList(e):this._searchObjectList(e):this._searchLogical(e);return de(h,{ignoreFieldNorm:u}),a&&h.sort(s),y(r)&&r>-1&&(h=h.slice(0,r)),ve(h,this._docs,{includeMatches:o,includeScore:c})}},{key:"_searchStringList",value:function(e){var t=re(e,this.options),n=this._myIndex.records,r=[];return n.forEach((function(e){var n=e.v,i=e.i,o=e.n;if(k(n)){var c=t.searchIn(n),a=c.isMatch,s=c.score,u=c.indices;a&&r.push({item:n,idx:i,matches:[{score:s,value:n,norm:o,indices:u}]})}})),r}},{key:"_searchLogical",value:function(e){var t=this,n=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=n.auto,i=void 0===r||r,o=function e(n){var r=Object.keys(n),o=ue(n);if(!o&&r.length>1&&!se(n))return e(fe(n));if(he(n)){var c=o?n[ce]:r[0],a=o?n[ae]:n[c];if(!g(a))throw new Error(b(c));var s={keyId:j(c),pattern:a};return i&&(s.searcher=re(a,t)),s}var u={children:[],operator:r[0]};return r.forEach((function(t){var r=n[t];v(r)&&r.forEach((function(t){u.children.push(e(t))}))})),u};return se(e)||(e=fe(e)),o(e)}(e,this.options),r=this._myIndex.records,i={},o=[];return r.forEach((function(e){var r=e.$,c=e.i;if(k(r)){var a=function e(n,r,i){if(!n.children){var o=n.keyId,c=n.searcher,a=t._findMatches({key:t._keyStore.get(o),value:t._myIndex.getValueForItemAtKeyId(r,o),searcher:c});return a&&a.length?[{idx:i,item:r,matches:a}]:[]}switch(n.operator){case ie:for(var s=[],u=0,h=n.children.length;u<h;u+=1){var f=e(n.children[u],r,i);if(!f.length)return[];s.push.apply(s,l(f))}return s;case oe:for(var d=[],v=0,g=n.children.length;v<g;v+=1){var y=e(n.children[v],r,i);if(y.length){d.push.apply(d,l(y));break}}return d}}(n,r,c);a.length&&(i[c]||(i[c]={idx:c,item:r,matches:[]},o.push(i[c])),a.forEach((function(e){var t,n=e.matches;(t=i[c].matches).push.apply(t,l(n))})))}})),o}},{key:"_searchObjectList",value:function(e){var t=this,n=re(e,this.options),r=this._myIndex,i=r.keys,o=r.records,c=[];return o.forEach((function(e){var r=e.$,o=e.i;if(k(r)){var a=[];i.forEach((function(e,i){a.push.apply(a,l(t._findMatches({key:e,value:r[i],searcher:n})))})),a.length&&c.push({idx:o,item:r,matches:a})}})),c}},{key:"_findMatches",value:function(e){var t=e.key,n=e.value,r=e.searcher;if(!k(n))return[];var i=[];if(v(n))n.forEach((function(e){var n=e.v,o=e.i,c=e.n;if(k(n)){var a=r.searchIn(n),s=a.isMatch,u=a.score,h=a.indices;s&&i.push({score:u,key:t,value:n,idx:o,norm:c,indices:h})}}));else{var o=n.v,c=n.n,a=r.searchIn(o),s=a.isMatch,u=a.score,h=a.indices;s&&i.push({score:u,key:t,value:o,norm:c,indices:h})}return i}}]),e}();function de(e,t){var n=t.ignoreFieldNorm,r=void 0===n?A.ignoreFieldNorm:n;e.forEach((function(e){var t=1;e.matches.forEach((function(e){var n=e.key,i=e.norm,o=e.score,c=n?n.weight:null;t*=Math.pow(0===o&&c?Number.EPSILON:o,(c||1)*(r?1:i))})),e.score=t}))}function ve(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=n.includeMatches,i=void 0===r?A.includeMatches:r,o=n.includeScore,c=void 0===o?A.includeScore:o,a=[];return i&&a.push(R),c&&a.push(F),e.map((function(e){var n=e.idx,r={item:t[n],refIndex:n};return a.length&&a.forEach((function(t){t(e,r)})),r}))}return le.version="6.4.3",le.createIndex=$,le.parseIndex=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.getFn,r=void 0===n?A.getFn:n,i=e.keys,o=e.records,c=new E({getFn:r});return c.setKeys(i),c.setIndexRecords(o),c},le.config=A,function(){ne.push.apply(ne,arguments)}(te),le},"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).Fuse=t();;const idx=[{"link":"https://neuroimaging-cookbook.github.io/software/afni/","title":"afni","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/binarize/","title":"binarize","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/template_recipe/","title":"Contributing to the Neuroimaging Cookbook","body":"[The title entered above will automatically appear here, so just start by explaining the recipe purpose of your recipe. Here are some guidelines for writing your recipe: Explain briefly how the recipe works. Provide a link to documentation of any third-party software when possible. Provide the version of the software/package. Use bullet points for your recipe's explanation. Try to explain everything briefly but clearly. If you provide a custom function, then please provide a usage example below. Here are some guidelines for submitting your recipe: Please use Markdown Your recipe should be concise. Please do not exceed 100 lines. Your code snippet should be roughly 1-10 lines Write your recipe to `content/recipes/*.md' Follow this heuristic for saving your recipe: content/recipes/&lt;user-defined-name&gt;_recipe.md If necessary, any images associated with a recipe should follow a heuristic: content/recipes/&lt;user-defined-name&gt;_image_&lt;index&gt;.jpg Please include software versions and links to software documentation when possible Ingredients: Please list any software packages (and dependencies) required for this recipe Your code snippet should be written in the code cell below. Please remember to specify the programming language used (the one below uses Python). 1 2 3 def function_name(args): # code return 0 Example usage: If your code snippet includes a custom function, then please provide an example (or two) to demonstrate how it works in the code cell below. Please remember to specify the programming language used (the one below uses Python). 1 function_name(val) # result You can submit your recipe by copying the text from this template HERE and submiting your recipe by submitting a pull request. Alternatively, you can suggest a recipe below. Suggest new recipe]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/extract/","title":"extract","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/modalities/fmri/","title":"fMRI","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/getting-started/","title":"getting started","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/software/github/","title":"github","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/languages/","title":"Languages","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/languages/markdown/","title":"markdown","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/mask/","title":"mask","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/modalities/","title":"Modalities","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/","title":"Neuroimaging Cookbook","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/parcellation/","title":"parcellation","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/languages/python/","title":"python","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/roi/","title":"roi","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/software/","title":"Software","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/","title":"Tags","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/template/","title":"template","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/recipes/extractmaskfromparcellation_recipe/","title":"Using 3dcalc to create a binary mask from a parcellation scheme","body":"[This recipe uses 3dcalc in AFNI to output a binarized 3D image file (nifti) of a region-of-interest in a parcellation scheme that is indexed by number of parcels. Ingredients: AFNI&gt;=20.3.03 3dcalc Example usage: This example uses the Harvard Oxford Atlas 1 2 3 4 5 6 7 #!/bin/bash ATLAS_FILENAME=&#39;Harvard_Oxford_Atlas.nii.gz&#39; MASK_NAME=&#39;r_amygdala&#39; ROI_INDEX=102 # index assigned to parcel/region of interest in atlas parcellation scheme (the index for right amygdala in Harvard Oxford atlas is 102) 3dcalc -a ${ATLAS_FILENAME} -prefix ${MASK_NAME}.nii.gz -expr &#34;amongst(a,${ROI_INDEX})&#34; You can also extract all parcels using a .txt file containing a parcel name on each row: 1 2 3 4 5 6 7 8 9 10 #!/bin/bash ATLAS_FILENAME=&#39;Harvard_Oxford_Atlas.nii.gz&#39; MASKLIST_FILENAME=&#39;Harvard_Oxford_Atlas_ROIs.txt&#39; ROI_INDEX=0 for MASK_NAME in $(cat &#34;${MASKLIST_FILENAME}); do ROI_INDEX=$((COUNTER+1))3dcalc -a ${ATLAS_FILENAME}-prefix ${MASK_NAME}.nii.gz -expr &#34;amongst(a,${ROI_INDEX})&#34; done]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/modalities/all/","title":"all","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/modalities/any/","title":"any","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/array/","title":"array","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/languages/bash/","title":"bash","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/bids/","title":"bids","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/bids-apps/","title":"bids apps","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/recipes/bids-validation-cli/","title":"BIDS Validation Recipe","body":"[Validating BIDS formatted Datasets using bids-validator Command Line Tool This recipe uses the bids-validator v1.5.7 command line tool to verify if a specified dataset conforms to the BIDS specification [1]. There are other ways to use the bids-validator, this is just one of the methods. This is an especially important step if you intend to uses any of the BIDS Apps [2]like fMRIPrep, MRIQC, etc [3] Ingredients Node.js (at least version 10.11.0) Installation Prep Install bids-validator [3] 1 $ npm install -g bids-validator If you run into Permission denied related errors, try: 1 $ sudo npm install -g bids-validator Usage If the installation was successful, running bids-validator --help on your terminal should give you the following output: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 Usage: bids-validator &lt;dataset_directory&gt; [options] Options: --help, -h Show help [boolean] --version, -v Show version number [boolean] --ignoreWarnings Disregard non-critical issues [boolean] --ignoreNiftiHeaders Disregard NIfTI header content during validation [boolean] --ignoreSubjectConsistency Skip checking that any given file for one subject is present for all other subjects. [boolean] --verbose Log more extensive information about issues [boolean] --json Output results as JSON [boolean] --ignoreSymlinks Skip any symlinked directories when validating a dataset [boolean] --remoteFiles Validate remote files. [boolean] [default: false] --gitTreeMode Improve performance using git metadata. Does not capture changes not known to git. [boolean] --gitRef Targets files at a given branch, tag, or commit hash. Use with --gitTreeMode. [default: &#34;HEAD&#34;] [string] --config, -c Optional configuration file. See https://github.com/bids-standard/bids-validator for more info [default: &#34;.bids-validator-config.json&#34;] This tool checks if a dataset in a given directory is compatible with the Brain Imaging Data Structure specification. To learn more about Brain Imaging Data Structure visit http://bids.neuroimaging.io Examples Initial sample-dataset directory structure: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 sample-dataset ├── derivatives │ └── pydeface-2.0.0 │ ├── sub-01 │ │ ├── sub-01_ses-01_T1w_defaced.nii.gz │ │ └── sub-01_ses-01_T2w_defaced.nii.gz │ └── sub-02 │ ├── sub-02_ses-01_T1w_defaced.nii.gz │ ├── sub-02_ses-01_T2star_defaced.nii.gz │ └── sub-02_ses-01_T2w_defaced.nii.gz ├── participants.json ├── participants.tsv ├── sub-01 │ └── ses-01 │ └── anat │ ├── sub-01_ses-01_T1w.json │ ├── sub-01_ses-01_T1w.nii.gz │ ├── sub-01_ses-01_T2w.json │ └── sub-01_ses-01_T2w.nii.gz └── sub-02 └── ses-01 └── anat ├── sub-02_ses-01_T1w.json ├── sub-02_ses-01_T1w.nii.gz ├── sub-02_ses-01_T2star.json ├── sub-02_ses-01_T2star.nii.gz ├── sub-02_ses-01_T2w.json └── sub-02_ses-01_T2w.nii.gz 10 directories, 17 files Now I'll run the bids-validator without any optional flags: 1 $ bids-validator sample-dataset My terminal output: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 bids-validator@1.5.7 1: [ERR] The compulsory file /dataset_description.json is missing. See Section 03 (Modality agnostic files) of the BIDS specification. (code: 57 - DATASET_DESCRIPTION_JSON_MISSING) Please visit https://neurostars.org/search?q=DATASET_DESCRIPTION_JSON_MISSING for existing conversations about this issue. 1: [WARN] Not all subjects contain the same files. Each subject should contain the same number of files with the same naming unless some files are known to be missing. (code: 38 - INCONSISTENT_SUBJECTS) ./sub-01/ses-01/anat/sub-01_ses-01_T2star.json Evidence: Subject: sub-01; Missing file: sub-01_ses-01_T2star.json ./sub-01/ses-01/anat/sub-01_ses-01_T2star.nii.gz Evidence: Subject: sub-01; Missing file: sub-01_ses-01_T2star.nii.gz Please visit https://neurostars.org/search?q=INCONSISTENT_SUBJECTS for existing conversations about this issue. 2: [WARN] The recommended file /README is missing. See Section 03 (Modality agnostic files) of the BIDS specification. (code: 101 - README_FILE_MISSING) Please visit https://neurostars.org/search?q=README_FILE_MISSING for existing conversations about this issue. Summary: Available Tasks: Available Modalities: 12 Files, 38.63MB T1w 2 - Subjects T2w 1 - Session T2star If you have any questions, please post on https://neurostars.org/tags/bids. So, we have one tiny error and two warnings but as you can see, the error messages are quite detailed. Errors Adding a dataset_description.json file should fix the errors. See here on how to create one Warnings Most datasets don't have acquisitions with the same modalities so this warning could be ignored. Including the --ignoreSubjectConsistency should take of this. A README file is recommended not required so we could ignore this too. Including the --ignoreWarnings flag should fix this. Let's see if these changes fixes it: 1 $ bids-validator sample-dataset --ignoreSubjectConsistency --ignoreWarnings woohoo! 1 2 3 4 5 6 This dataset appears to be BIDS compatible. Summary: Available Tasks: Available Modalities: 13 Files, 38.63MB T1w 2 - Subjects T2w 1 - Session T2star If you have any questions, please post on https://neurostars.org/tags/bids. We now have valid BIDS dataset! Sources BIDS Specification BIDS Apps Available BIDS Apps BIDS Validator GitHub Page Modality Agnostic Files]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/bids-validator/","title":"bids-validator","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/software/bids-validator/","title":"bids-validator","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/brik/","title":"brik","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/command-line/","title":"command line","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/connectivity/","title":"connectivity","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/convert/","title":"convert","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/recipes/dcm2nii_recipe/","title":"Convert DICOM files to NIFTI files","body":"[This recipe provides code for converting DICOM (.dcm) files to NIFTI (.nii) files dcm2niix This recipe converts dicom to nifti files using the program dcm2niix https://github.com/rordenlab/dcm2niix The only required argument for dcm2niix is the location of the folder with the DICOM files to convert, which is always the final argument provided. # install dcm2niix (for mac) curl -fLO https://github.com/rordenlab/dcm2niix/releases/latest/download/dcm2niix_mac.zip # convert dicom files found in dicomdir, output to outdir dcm2niix -o ~/outdir ~/dicomdir dcm2niibatch (batch conversions) https://github.com/rordenlab/dcm2niix/blob/master/BATCH.md Use dcm2niibatch to perform batch conversion of multiple dicoms using the configurations specified in a yaml file See github link above for yaml file format dcm2niibatch batch_config.yml dcm2niix_afni (AFNI) This recipe will use afni's dcm2niix_afni to convert dicom files found in ~/dicomdir to nifti files, and output converted files into ~/outputdir For additional examples and options, see: https://afni.nimh.nih.gov/pub/dist/doc/program_help/dcm2niix_afni.html 1 2 #!/bin/bash dcm2niix_afni -o ~/outputdir ~/dicomdir dicom2nifti (python) This recipe will use the python library dicom2nifti to convert dicom files to nifti files https://github.com/icometrix/dicom2nifti 1 2 3 4 5 6 7 8 9 10 11 # install using pip pip install dicom2nifti # Run import dicom2nifti # run from commandline: dicom2nifti /dicom_directory /output_directory # run from python: dicom2nifti.convert_directory(dicom_directory, output_directory, compression=True, reorient=True)]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/defacing/","title":"defacing","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/dicom/","title":"dicom","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/modalities/dmri/","title":"dmri","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/flatten/","title":"flatten","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/software/fsl/","title":"fsl","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/functional-connectivity/","title":"functional connectivity","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/head/","title":"head","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/lower-triangle/","title":"lower triangle","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/recipes/flattenrdm_recipe/","title":"Mask lower triangle of a Representational Dissimilarity Matrix (RDM)","body":"[This recipe takes a Representational Dissimilarity Matrix (RDM) as a square numpy array, masks the diagonal and lower triangle, and outputs a flattened numpy array of the upper triangle. Easily adaptable for Representational Similarity Analysis (RSA), Functional/Structural Connectivity analyses, or other analyses with related pipelines with symmetric, square matrices. Requirements: numpy&gt;=1.18.1 1 2 3 4 5 6 7 def flattenRDM(square_matrix): assert square_matrix.shape[0] == square_matrix.shape[1], &#34;Must be a square numpy array&#34; # mask the diagonal and lower triangle and output flattened array flattened_out = square_matrix[np.triu_indices(len(square_matrix), k=1)] return flattened_out Example usage: 1 2 3 4 5 6 7 8 import numpy as np square_matrix = np.array([[1,0,0,0], [0,1,0,0], [0,0,1,0], [0,0,0,1]]) flattenRDM(square_matrix)]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/matrix/","title":"matrix","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/multiple-modalities/","title":"multiple modalities","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/nifti/","title":"nifti","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/software/npm/","title":"npm","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/software/numpy/","title":"numpy","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/pydeface/","title":"pydeface","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/software/pydeface/","title":"pydeface","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/recipes/pydeface_recipe/","title":"PyDeface Recipe","body":"[Defacing Multiple Brain Imaging Modalities using PyDeface For this recipe, we are using pydeface-2.0.0. Ingredients: A python environment with the following dependencies: FSL 6.0.2 Python 3.7.3 NumPy 1.17.1 NiBabel 2.5.1 Nipype 1.3.0-rc1 Installation: pip install pydeface Usage 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 $ pydeface --help # bash output -------------- pydeface 2.0.0 -------------- usage: pydeface [-h] [--outfile path] [--force] [--applyto [...]] [--cost mutualinfo] [--template path] [--facemask path] [--nocleanup] [--verbose] [--debug] path positional arguments: path Path to input nifti. optional arguments: -h, --help show this help message and exit --outfile path If not provided adds &#39;_defaced&#39; suffix. --force Force to rewrite the output even if it exists. --applyto [ ...] Apply the created face mask to other images. Can take multiple arguments. --cost mutualinfo FSL-FLIRT cost function. Default is &#39;mutualinfo&#39;. --template path Optional template image that will be used as the registration target instead of the default. --facemask path Optional face mask image that will be used instead of the default. --nocleanup Do not cleanup temporary files. Off by default. --verbose Show additional status prints. Off by default. --debug Do not catch exceptions and show exception traceback (Drop into pdb debugger). Example Usage Case 1: Using default facemask and template For a dataset with only T1w images, the defaults do a good job of defacing 1 2 $ mkdir pydeface-out $ pydeface infile_T1w.nii.gz --outfile ./pydeface-out/infile_T1w_defaced.nii.gz Case 2: Using subject-specific templates with the --template flag Example directory tree of a sample dataset with multiple modalities 1 2 3 4 5 6 7 8 sample-dataset ├── sub-01 │ ├── sub-01_ses-01_T1w.nii.gz │ └── sub-01_ses-01_FLAIR.nii.gz └── sub-02 ├── sub-02_ses-01_T1w.nii.gz ├── sub-02_ses-01_T2w.nii.gz └── sub-02_ses-01_T2star.nii.gz Commands to deface sub-02 are shown below. 1 2 $ cd ./sub-02 $ pydeface sub-02_ses-01_T1w.nii.gz This will output a defaced image with sub-02_ses-01_T1w_defaced.nii.gz 1 2 $ pydeface sub-02_ses-01_T2w.nii.gz --template sub-02_ses-01_T1w.nii.gz $ pydeface sub-02_ses-01_T2star.nii.gz --template sub-02_ses-01_T1w.nii.gz Final directory tree: 1 2 3 4 5 6 7 8 9 10 11 sample-dataset ├── sub-01 │ ├── sub-01_ses-01_T1w.nii.gz │ └── sub-01_ses-01_T2w.nii.gz └── sub-02 ├── sub-02_ses-01_T1w.nii.gz ├── sub-02_ses-01_T1w_defaced.nii.gz ├── sub-02_ses-01_T2star.nii.gz ├── sub-02_ses-01_T2star_defaced.nii.gz ├── sub-02_ses-01_T2w.nii.gz └── sub-02_ses-01_T2w_defaced.nii.gz Sources: pydeface github page t2w scan defacing]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/rdm/","title":"rdm","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/representational-similarity/","title":"representational similarity","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/rsa/","title":"rsa","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/modalities/smri/","title":"smri","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/structural-connectivity/","title":"structural connectivity","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/recipes/brikhead2nii_recipe/","title":"Using 3dAFNItoNIFTI to convert AFNI files to NIFTI files","body":"[This recipe converts BRIK/HEAD (AFNI) files to NIFTI (.nii) files using 3dAFNItoNIFTI. https://afni.nimh.nih.gov/pub/dist/doc/program_help/3dAFNItoNIFTI.html 1 2 3 #!/bin/bash 3dAFNItoNIFTI -prefix prefixname dataset]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/tags/vectorize/","title":"vectorize","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/recipes/automatically-generated-recipe/","title":"Automatically Generated Recipe","body":"[Explain briefly what the recipe does. Explain briefly how the recipe works. Provide a citation and link to documentation of any third party software. Provide the version of the software/package Use bullet points for your recipe's explanation. Try to explain everything briefly but clearly. To format code, add it between a pair of 3 ticks (`) 1 2 3 def function_name(args): # code return 0 1 function_name(val) # result]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/modalities/egg/","title":"egg","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/modalities/fnirs/","title":"fnirs","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/modalities/meg/","title":"meg","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/software/nilearn/","title":"nilearn","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/languages/r/","title":"r","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/software/spm/","title":"spm","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/about/","title":"","body":"[Test]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/","title":"","body":"[Centralized, simple, searchable recipes (code snippets) for neuroimaging data Submit a Recipe Suggest a Recipe]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/categories/","title":"Categories","body":"[]".toLowerCase(),},{"link":"https://neuroimaging-cookbook.github.io/search/","title":"Search","body":"[]".toLowerCase(),},];const searchKeys=['title','link','body','id'];const searchPageElement=elem('#searchpage');const searchOptions={ignoreLocation:true,findAllMatches:true,includeScore:true,shouldSort:true,keys:searchKeys,threshold:0.0};const index=new Fuse(idx,searchOptions);function minQueryLen(query){query=query.trim();const queryIsFloat=parseFloat(query);const minimumQueryLength=queryIsFloat?1:2;console.log(query,queryIsFloat,minimumQueryLength);return minimumQueryLength;}
function searchResults(results=[],query="",passive=false){let resultsFragment=new DocumentFragment();let showResults=elem('.search_results');if(passive){showResults=searchPageElement;}
emptyEl(showResults);const queryLen=query.length;const requiredQueryLen=minQueryLen(query);if(results.length&&queryLen>=requiredQueryLen){console.log('hmm');let resultsTitle=createEl('h3');resultsTitle.className='search_title';resultsTitle.innerText=quickLinks;if(passive){resultsTitle.innerText=searchResultsLabel;}
resultsFragment.appendChild(resultsTitle);if(!searchPageElement){results=results.slice(0,8);}else{results=results.slice(0,12);}
results.forEach(function(result){let item=createEl('a');item.href=`${result.link}?query=${query}`;item.className='search_result';item.style.order=result.score;if(passive){pushClass(item,'passive');let itemTitle=createEl('h3');itemTitle.textContent=result.title;item.appendChild(itemTitle);let itemDescription=createEl('p');let queryInstance=result.body.indexOf(query);itemDescription.textContent=`... ${result.body.substring(queryInstance,queryInstance+200)} ...`;item.appendChild(itemDescription);}else{item.textContent=result.title;}
resultsFragment.appendChild(item);});}
if(queryLen>=requiredQueryLen){if(!results.length){showResults.innerHTML=`<span class="search_result">${noMatchesFound}</span>`;}}else{if(queryLen>1){showResults.innerHTML=`<label for="find" class="search_result">${shortSearchQuery}</label>`;}else{showResults.innerHTML=`<label for="find" class="search_result">${typeToSearch}</label>`;}}
showResults.appendChild(resultsFragment);}
function search(searchTerm,passive=false){if(searchTerm.length){let rawResults=index.search(searchTerm);rawResults=rawResults.map(function(result){const score=result.score;const resultItem=result.item;resultItem.score=(parseFloat(score)*50).toFixed(0);return resultItem;});passive?searchResults(rawResults,searchTerm,true):searchResults(rawResults,searchTerm);}else{passive?searchResults([],"",true):searchResults();}}
function liveSearch(){const searchField=elem('.search_field');if(searchField){searchField.addEventListener('input',function(){const searchTerm=searchField.value.trim().toLowerCase();search(searchTerm);});if(!searchPageElement){searchField.addEventListener('search',function(){const searchTerm=searchField.value.trim().toLowerCase();if(searchTerm.length){window.location.href=`${parentURL}search/?query=${searchTerm}`;}});}}}
function findQuery(query='query'){const urlParams=new URLSearchParams(window.location.search);if(urlParams.has(query)){let c=urlParams.get(query);return c;}
return "";}
function passiveSearch(){if(searchPageElement){const searchTerm=findQuery();search(searchTerm,true);const searchField=elem('.search_field');if(searchField){searchField.addEventListener('input',function(){const searchTerm=searchField.value.trim().toLowerCase();search(searchTerm,true);wrapText(searchTerm,main);});}}}
function hasSearchResults(){const searchResults=elem('.results');const body=searchResults.innerHTML.length;return[searchResults,body]}
function clearSearchResults(){let searchResults=hasSearchResults();let actionable=searchResults[1];if(actionable){searchResults=searchResults[0];searchResults.innerHTML="";const searchField=elem('.search_field');searchField.value="";}}
function onEscape(fn){window.addEventListener('keydown',function(event){if(event.code==="Escape"){fn();}});}
let main=elem('main');if(!main){main=elem('.main');}
window.addEventListener('load',function(){searchPageElement?false:liveSearch();passiveSearch();wrapText(findQuery(),main);onEscape(clearSearchResults);});window.addEventListener('click',function(event){const target=event.target;const isSearch=target.closest('.search')||target.matches('.search');if(!isSearch&&!searchPageElement){clearSearchResults();}});